# Карточки Anki по машинному обучению на Python

## Формат файла для импорта в Anki
Этот файл содержит карточки в формате: вопрос; ответ

## Основы машинного обучения

Что такое машинное обучение?; Подраздел искусственного интеллекта, который позволяет компьютерам учиться на основе данных без явного программирования. Системы ML улучшают свою производительность с опытом.

Назовите основные типы машинного обучения.; 1. Обучение с учителем (Supervised Learning)\n2. Обучение без учителя (Unsupervised Learning)\n3. Обучение с подкреплением (Reinforcement Learning)\n4. Полуавтоматическое обучение (Semi-supervised Learning)

Что такое обучение с учителем?; Тип машинного обучения, где модель обучается на размеченных данных, содержащих входные признаки и соответствующие им целевые значения. Цель - научиться отображать входные данные на правильные выходные.

Что такое обучение без учителя?; Тип машинного обучения, где модель обучается на неразмеченных данных, выявляя скрытые структуры и закономерности. Примеры: кластеризация, снижение размерности, обнаружение аномалий.

Что такое обучение с подкреплением?; Тип машинного обучения, где агент учится выполнять действия в среде, чтобы максимизировать накопленное вознаграждение. Агент учится методом проб и ошибок, взаимодействуя со средой.

Что такое переобучение (overfitting)?; Ситуация, когда модель слишком хорошо подстраивается под обучающие данные, запоминая шум и особенности конкретной выборки, что приводит к плохой обобщающей способности на новых данных.

Что такое недообучение (underfitting)?; Ситуация, когда модель слишком проста и не может уловить закономерности в данных, что приводит к низкой точности как на обучающей, так и на тестовой выборке.

Какие методы используются для борьбы с переобучением?; 1. Регуляризация (L1, L2)\n2. Dropout\n3. Ранняя остановка (Early stopping)\n4. Увеличение объема данных\n5. Уменьшение сложности модели\n6. Кросс-валидация\n7. Ансамблевые методы

Что такое кросс-валидация?; Метод оценки обобщающей способности модели, при котором данные многократно разделяются на обучающую и проверочную выборки. Наиболее распространенный вариант - k-fold cross-validation.

Что такое метрики качества в машинном обучении?; Количественные показатели, оценивающие эффективность модели. Выбор метрики зависит от задачи. Примеры: точность (accuracy), полнота (recall), точность (precision), F1-мера, ROC-AUC, MSE.

## Классические алгоритмы машинного обучения

Что такое линейная регрессия?; Алгоритм, моделирующий линейную зависимость между входными признаками и целевой переменной. Цель - найти оптимальные коэффициенты, минимизирующие ошибку предсказания.

Как работает метод k-ближайших соседей (k-NN)?; Алгоритм классификации/регрессии, который предсказывает метку объекта на основе меток k ближайших к нему объектов из обучающей выборки. Близость определяется метрикой расстояния (обычно евклидово).

Что такое дерево решений?; Алгоритм, строящий иерархическую структуру правил "если-то" для принятия решений. Каждый узел представляет проверку признака, ветви - возможные значения, листья - предсказания.

Как работает алгоритм случайного леса (Random Forest)?; Ансамблевый метод, объединяющий множество деревьев решений, обученных на разных подвыборках данных и с разными наборами признаков. Итоговое решение принимается голосованием или усреднением.

Что такое метод опорных векторов (SVM)?; Алгоритм, находящий оптимальную гиперплоскость, разделяющую классы с максимальным зазором. Для нелинейных задач используется "kernel trick" - преобразование в пространство более высокой размерности.

Как работает алгоритм Naive Bayes?; Вероятностный классификатор, основанный на теореме Байеса с предположением о независимости признаков. Вычисляет вероятность принадлежности объекта к классу на основе условных вероятностей признаков.

Что такое градиентный бустинг?; Ансамблевый метод, последовательно обучающий слабые модели (обычно деревья решений), каждая из которых корректирует ошибки предыдущих. Популярные реализации: XGBoost, LightGBM, CatBoost.

Что такое кластеризация и как работает алгоритм K-means?; Кластеризация - задача разбиения данных на группы (кластеры) схожих объектов. K-means итеративно назначает объекты ближайшим центроидам и пересчитывает центроиды, минимизируя внутрикластерное расстояние.

Что такое снижение размерности и как работает PCA?; Снижение размерности - уменьшение числа признаков с сохранением информативности. PCA (метод главных компонент) проецирует данные на направления максимальной дисперсии, сохраняя наиболее важную информацию.

Что такое ансамблевые методы в машинном обучении?; Методы, объединяющие несколько моделей для улучшения предсказаний. Основные типы: бэггинг (параллельное обучение, например Random Forest) и бустинг (последовательное обучение, например Gradient Boosting).

## Продвинутые методы машинного обучения

Что такое регуляризация в машинном обучении?; Техника предотвращения переобучения путем добавления штрафа за сложность модели. Основные типы: L1 (Lasso) - способствует разреженности, L2 (Ridge) - уменьшает величину коэффициентов.

Как работает алгоритм DBSCAN для кластеризации?; Алгоритм кластеризации на основе плотности, который группирует точки, находящиеся близко друг к другу. Не требует предварительного задания числа кластеров и может находить кластеры произвольной формы.

Что такое t-SNE и для чего он используется?; t-SNE (t-distributed Stochastic Neighbor Embedding) - алгоритм нелинейного снижения размерности, сохраняющий локальную структуру данных. Часто используется для визуализации высокоразмерных данных в 2D или 3D.

Что такое One-Hot Encoding и когда он применяется?; Метод преобразования категориальных признаков в числовые, при котором каждая категория становится бинарным признаком (0 или 1). Применяется для работы с категориальными данными в алгоритмах, требующих числовых входов.

Что такое Feature Engineering?; Процесс создания новых признаков из существующих данных для улучшения производительности модели. Включает трансформацию, комбинирование, агрегацию и отбор признаков.

Что такое гиперпараметры и как их оптимизировать?; Параметры алгоритма, задаваемые перед обучением (в отличие от параметров, которые оптимизируются в процессе обучения). Методы оптимизации: Grid Search, Random Search, Bayesian Optimization.

Что такое Pipeline в машинном обучении?; Последовательность шагов обработки данных и моделирования, объединенных в единый процесс. Позволяет автоматизировать рабочий процесс и предотвратить утечку данных между этапами.

Что такое стекинг (Stacking) в ансамблевых методах?; Метод объединения моделей, где предсказания базовых моделей используются как признаки для мета-модели, которая выдает итоговое предсказание. Позволяет комбинировать сильные стороны разных алгоритмов.

Что такое аномалии и как их обнаруживать?; Аномалии - наблюдения, значительно отличающиеся от большинства данных. Методы обнаружения: статистические (Z-score, IQR), основанные на плотности (LOF), на основе расстояний (Isolation Forest), автоэнкодеры.

Что такое Active Learning?; Подход, при котором алгоритм активно выбирает, какие данные нужно разметить для обучения, чтобы максимизировать прирост производительности. Полезен при ограниченных ресурсах для разметки данных.

## Глубокое обучение

Что такое глубокое обучение?; Подраздел машинного обучения, использующий многослойные нейронные сети для моделирования сложных закономерностей в данных. Позволяет автоматически извлекать иерархические признаки из сырых данных.

Что такое нейронная сеть?; Вычислительная модель, вдохновленная структурой мозга, состоящая из связанных нейронов, организованных в слои. Каждый нейрон принимает входные сигналы, применяет функцию активации и передает результат дальше.

Какие основные типы слоев используются в нейронных сетях?; 1. Полносвязный (Dense) слой\n2. Сверточный (Convolutional) слой\n3. Рекуррентный (Recurrent) слой\n4. Слой подвыборки (Pooling)\n5. Слой нормализации (BatchNormalization)\n6. Dropout слой\n7. Embedding слой

Что такое функция активации и какие функции активации наиболее популярны?; Нелинейное преобразование, применяемое к выходу нейрона. Популярные функции: ReLU (Rectified Linear Unit), Sigmoid, Tanh, Leaky ReLU, ELU, Softmax (для выходного слоя в задачах классификации).

Что такое обратное распространение ошибки (backpropagation)?; Алгоритм обучения нейронных сетей, который вычисляет градиент функции потерь по отношению к весам сети, распространяя ошибку от выходного слоя к входному, и обновляет веса для минимизации ошибки.

Что такое функция потерь (loss function) и какие функции потерь часто используются?; Функция, измеряющая расхождение между предсказаниями модели и истинными значениями. Популярные функции: MSE (среднеквадратичная ошибка) для регрессии, Cross-Entropy для классификации, Hinge Loss для SVM.

Что такое оптимизатор и какие оптимизаторы популярны в глубоком обучении?; Алгоритм, обновляющий веса нейронной сети на основе градиента функции потерь. Популярные оптимизаторы: SGD (стохастический градиентный спуск), Adam, RMSprop, Adagrad, Adadelta.

Что такое сверточная нейронная сеть (CNN)?; Архитектура нейронной сети, специализированная для обработки данных с сеточной структурой (например, изображений). Использует сверточные слои для автоматического извлечения пространственных признаков.

Что такое рекуррентная нейронная сеть (RNN)?; Архитектура нейронной сети с обратными связями, позволяющая обрабатывать последовательные данные, сохраняя информацию о предыдущих шагах. Применяется для обработки текста, временных рядов, аудио.

Что такое LSTM и GRU?; Специальные типы рекуррентных нейронных сетей, разработанные для решения проблемы исчезающего и взрывного градиента. LSTM (Long Short-Term Memory) и GRU (Gated Recurrent Unit) используют механизмы гейтов для контроля потока информации.

## Компьютерное зрение и обработка естественного языка

Что такое компьютерное зрение?; Область искусственного интеллекта, занимающаяся обработкой и анализом изображений и видео для извлечения информации и принятия решений, аналогично человеческому зрению.

Какие основные задачи решает компьютерное зрение?; 1. Классификация изображений\n2. Обнаружение объектов\n3. Сегментация изображений\n4. Распознавание лиц\n5. Отслеживание объектов\n6. Оценка позы\n7. Генерация изображений

Что такое сверточный слой в CNN?; Слой, выполняющий операцию свертки входных данных с набором фильтров для извлечения признаков. Каждый фильтр обнаруживает определенный паттерн (края, текстуры и т.д.) в разных частях изображения.

Что такое слой подвыборки (pooling) в CNN?; Слой, уменьшающий пространственные размеры представления данных путем объединения соседних значений. Наиболее распространены Max Pooling (выбор максимального значения) и Average Pooling (усреднение значений).

Что такое трансферное обучение в компьютерном зрении?; Подход, при котором модель, предварительно обученная на большом наборе данных (например, ImageNet), используется как основа для новой задачи. Часто замораживают веса нижних слоев и дообучают только верхние слои.

Что такое обработка естественного языка (NLP)?; Область искусственного интеллекта, занимающаяся взаимодействием между компьютерами и человеческим языком, включая понимание, генерацию и анализ текста.

Какие основные задачи решает NLP?; 1. Классификация текста\n2. Анализ тональности\n3. Машинный перевод\n4. Генерация текста\n5. Ответы на вопросы\n6. Извлечение информации\n7. Суммаризация текста\n8. Распознавание именованных сущностей

Что такое токенизация в NLP?; Процесс разбиения текста на более мелкие единицы (токены), такие как слова, подслова или символы. Это первый шаг в большинстве задач обработки текста.

Что такое Word Embeddings?; Представление слов в виде плотных векторов в многомерном пространстве, где семантически близкие слова находятся рядом. Популярные методы: Word2Vec, GloVe, FastText.

Что такое трансформеры в NLP?; Архитектура нейронной сети, основанная на механизме внимания (attention), которая обрабатывает все элементы последовательности параллельно. Основа современных моделей NLP, таких как BERT, GPT, T5.

## Современные подходы в ML

Что такое генеративно-состязательные сети (GAN)?; Архитектура из двух нейронных сетей - генератора и дискриминатора, которые соревнуются друг с другом. Генератор создает данные, а дискриминатор оценивает их реалистичность. Применяется для генерации изображений, текста, музыки.

Что такое вариационные автоэнкодеры (VAE)?; Генеративная модель, состоящая из энкодера, отображающего входные данные в латентное пространство, и декодера, восстанавливающего данные из латентного представления. Используется для генерации и сжатия данных.

Что такое диффузионные модели?; Генеративные модели, основанные на постепенном добавлении и удалении шума. Обучаются предсказывать и обращать процесс диффузии, что позволяет генерировать высококачественные данные. Пример: Stable Diffusion.

Что такое обучение с подкреплением (Reinforcement Learning)?; Парадигма обучения, где агент учится выполнять действия в среде для максимизации накопленного вознаграждения. Включает исследование среды, принятие решений и обучение на основе обратной связи.

Что такое MLOps?; Набор практик, объединяющих разработку ML-моделей (ML) и операционные процессы (Ops) для надежного и эффективного развертывания и поддержки ML-систем в производстве.

Что такое отслеживание экспериментов в ML?; Процесс систематического документирования параметров, метрик и результатов экспериментов с ML-моделями для обеспечения воспроизводимости и сравнения различных подходов. Инструменты: MLflow, Weights & Biases, TensorBoard.

Что такое контейнеризация в ML и зачем она нужна?; Упаковка ML-модели и всех ее зависимостей в изолированный контейнер (например, Docker), что обеспечивает согласованность среды выполнения и упрощает развертывание в различных окружениях.

Что такое API для ML-моделей?; Интерфейс, позволяющий другим приложениям взаимодействовать с ML-моделью через стандартизированные запросы и ответы. Часто реализуется с помощью REST API или gRPC. Популярные фреймворки: Flask, FastAPI.

Что такое мониторинг моделей в производстве?; Процесс отслеживания производительности и поведения ML-моделей после развертывания для выявления проблем, таких как дрейф данных, деградация модели или аномалии в предсказаниях.

Что такое AutoML?; Автоматизированное машинное обучение - подход, автоматизирующий процесс выбора алгоритмов, настройки гиперпараметров и создания моделей. Примеры: Google AutoML, H2O AutoML, AutoKeras.

## Python для машинного обучения

Какие основные библиотеки используются для машинного обучения в Python?; 1. NumPy - для численных вычислений\n2. Pandas - для обработки и анализа данных\n3. Scikit-learn - для классических алгоритмов ML\n4. TensorFlow и Keras - для глубокого обучения\n5. PyTorch - для глубокого обучения\n6. Matplotlib и Seaborn - для визуализации

Как загрузить и предобработать данные с помощью Pandas?;
```python
import pandas as pd

# Загрузка данных
data = pd.read_csv('data.csv')

# Базовая информация о данных
print(data.info())
print(data.describe())

# Обработка пропущенных значений
data = data.dropna()  # Удаление строк с пропусками
# или
data = data.fillna(data.mean())  # Заполнение средними значениями

# Кодирование категориальных признаков
data = pd.get_dummies(data, columns=['category'])
```

Как разделить данные на обучающую и тестовую выборки?;
```python
from sklearn.model_selection import train_test_split

# Разделение на признаки и целевую переменную
X = data.drop('target', axis=1)
y = data['target']

# Разделение на обучающую и тестовую выборки
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)
```

Как обучить модель линейной регрессии с помощью scikit-learn?;
```python
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Создание и обучение модели
model = LinearRegression()
model.fit(X_train, y_train)

# Предсказания
y_pred = model.predict(X_test)

# Оценка модели
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"MSE: {mse:.4f}, R²: {r2:.4f}")

# Коэффициенты модели
print("Коэффициенты:", model.coef_)
print("Свободный член:", model.intercept_)
```

Как обучить модель классификации с помощью scikit-learn?;
```python
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Создание и обучение модели
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Предсказания
y_pred = model.predict(X_test)

# Оценка модели
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.4f}")
print(classification_report(y_test, y_pred))
```

Как создать и обучить простую нейронную сеть с помощью Keras?;
```python
from tensorflow import keras
from tensorflow.keras import layers

# Создание модели
model = keras.Sequential([
    layers.Dense(64, activation='relu', input_shape=(X_train.shape[1],)),
    layers.Dropout(0.2),
    layers.Dense(32, activation='relu'),
    layers.Dropout(0.2),
    layers.Dense(1, activation='sigmoid')  # для бинарной классификации
])

# Компиляция модели
model.compile(
    optimizer='adam',
    loss='binary_crossentropy',
    metrics=['accuracy']
)

# Обучение модели
history = model.fit(
    X_train, y_train,
    epochs=20,
    batch_size=32,
    validation_split=0.2
)

# Оценка модели
loss, accuracy = model.evaluate(X_test, y_test)
print(f"Test accuracy: {accuracy:.4f}")
```

Как визуализировать данные с помощью Matplotlib и Seaborn?;
```python
import matplotlib.pyplot as plt
import seaborn as sns

# Настройка стиля
plt.style.use('seaborn-whitegrid')
sns.set(font_scale=1.2)

# Гистограмма
plt.figure(figsize=(10, 6))
sns.histplot(data['feature'], kde=True)
plt.title('Distribution of Feature')
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.show()

# Диаграмма рассеяния
plt.figure(figsize=(10, 6))
sns.scatterplot(x='feature1', y='feature2', hue='target', data=data)
plt.title('Feature1 vs Feature2 by Target')
plt.show()

# Матрица корреляций
plt.figure(figsize=(12, 10))
correlation_matrix = data.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Correlation Matrix')
plt.show()

# Парные графики
sns.pairplot(data, hue='target')
plt.show()
```

Как сохранить и загрузить модель scikit-learn?;
```python
import joblib

# Сохранение модели
joblib.dump(model, 'model.joblib')

# Загрузка модели
loaded_model = joblib.load('model.joblib')

# Использование загруженной модели
y_pred = loaded_model.predict(X_test)
```

Как сохранить и загрузить модель Keras/TensorFlow?;
```python
# Сохранение всей модели
model.save('model.h5')

# Загрузка модели
from tensorflow import keras
loaded_model = keras.models.load_model('model.h5')

# Использование загруженной модели
y_pred = loaded_model.predict(X_test)
```

Как создать простой API для ML-модели с помощью Flask?;
```python
from flask import Flask, request, jsonify
import joblib
import numpy as np

app = Flask(__name__)
model = joblib.load('model.joblib')

@app.route('/predict', methods=['POST'])
def predict():
    data = request.get_json()
    features = np.array(data['features']).reshape(1, -1)
    prediction = model.predict(features)[0]
    
    return jsonify({'prediction': float(prediction)})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
```

## Проектная работа в ML

Какие этапы включает в себя ML-проект?; 1. Определение проблемы и целей\n2. Сбор и подготовка данных\n3. Исследовательский анализ данных (EDA)\n4. Feature Engineering\n5. Выбор и обучение моделей\n6. Оценка и оптимизация моделей\n7. Интерпретация результатов\n8. Развертывание модели\n9. Мониторинг и обновление

Как структурировать ML-проект?;
```
project/
├── data/
│   ├── raw/          # Исходные данные
│   └── processed/    # Обработанные данные
├── models/           # Сохраненные модели
├── notebooks/        # Jupyter notebooks
├── reports/          # Отчеты и визуализации
│   └── figures/      # Графики и диаграммы
├── src/              # Исходный код
│   ├── data/         # Скрипты для обработки данных
│   ├── features/     # Скрипты для создания признаков
│   ├── models/       # Скрипты для моделирования
│   └── visualization/# Скрипты для визуализации
├── README.md         # Описание проекта
└── requirements.txt  # Зависимости
```

Как документировать ML-проект?; 1. README.md с описанием проекта, инструкциями по установке и использованию\n2. Документация кода (docstrings, комментарии)\n3. Jupyter notebooks с пошаговым объяснением анализа и моделирования\n4. Отчеты о результатах экспериментов\n5. Диаграммы и визуализации\n6. Руководство пользователя для конечных продуктов

Как оценить качество ML-модели?; 1. Выбор подходящих метрик в зависимости от задачи\n2. Кросс-валидация для надежной оценки\n3. Сравнение с базовыми моделями и случайными предсказаниями\n4. Анализ ошибок и выявление паттернов\n5. Проверка на различных подмножествах данных\n6. Оценка бизнес-метрик и влияния на конечные цели

Как подготовить ML-проект для портфолио?; 1. Четкое описание проблемы и решения\n2. Структурированный и хорошо документированный код\n3. Визуализация результатов и выводов\n4. Демонстрация процесса разработки и принятия решений\n5. Размещение на GitHub с подробным README\n6. Создание демонстрационного веб-интерфейса или API\n7. Написание статьи или поста о проекте

